[project]
name = "uptime-monitor"
version = "0.2"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Timo", email = "timo@timoschaepe.de" }
]
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.9.3",
    "colorama>=0.4.6",
    "flask>=3.1.0",
    "flask-login>=0.6.3",
    "ping3>=4.0.8",
    "pytz>=2024.1",
    "pyyaml>=6.0.2",
    "rich>=13.9.4",
]

[project.scripts]
uptime-monitor = "uptime_monitor:run"
uptime-dashboard = "uptime_monitor.dashboard:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.2.1",
    "pytest-sugar>=1.0.0",
    "ruff>=0.9.9",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/uptime_monitor",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=70"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/uptime_monitor"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"
title = "Uptime Monitor Coverage Report"
